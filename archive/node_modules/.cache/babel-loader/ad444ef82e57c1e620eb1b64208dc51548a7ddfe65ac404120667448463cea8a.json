{"ast":null,"code":"import { LineSegmentsGeometry } from \"./LineSegmentsGeometry.js\";\nclass LineGeometry extends LineSegmentsGeometry {\n  constructor() {\n    super();\n    this.isLineGeometry = true;\n    this.type = \"LineGeometry\";\n  }\n  setPositions(array) {\n    const length = array.length - 3;\n    const points = new Float32Array(2 * length);\n    for (let i = 0; i < length; i += 3) {\n      points[2 * i] = array[i];\n      points[2 * i + 1] = array[i + 1];\n      points[2 * i + 2] = array[i + 2];\n      points[2 * i + 3] = array[i + 3];\n      points[2 * i + 4] = array[i + 4];\n      points[2 * i + 5] = array[i + 5];\n    }\n    super.setPositions(points);\n    return this;\n  }\n  setColors(array) {\n    const length = array.length - 3;\n    const colors = new Float32Array(2 * length);\n    for (let i = 0; i < length; i += 3) {\n      colors[2 * i] = array[i];\n      colors[2 * i + 1] = array[i + 1];\n      colors[2 * i + 2] = array[i + 2];\n      colors[2 * i + 3] = array[i + 3];\n      colors[2 * i + 4] = array[i + 4];\n      colors[2 * i + 5] = array[i + 5];\n    }\n    super.setColors(colors);\n    return this;\n  }\n  fromLine(line) {\n    const geometry = line.geometry;\n    this.setPositions(geometry.attributes.position.array);\n    return this;\n  }\n}\nexport { LineGeometry };","map":{"version":3,"names":["LineGeometry","LineSegmentsGeometry","constructor","isLineGeometry","type","setPositions","array","length","points","Float32Array","i","setColors","colors","fromLine","line","geometry","attributes","position"],"sources":["/Users/chengzixin/Documents/ITP/Second Year/2023 Fall/Visual Journalism/nypd-robot/prototype/node_modules/src/lines/LineGeometry.js"],"sourcesContent":["import { LineSegmentsGeometry } from '../lines/LineSegmentsGeometry'\n\nclass LineGeometry extends LineSegmentsGeometry {\n  constructor() {\n    super()\n\n    this.isLineGeometry = true\n\n    this.type = 'LineGeometry'\n  }\n\n  setPositions(array) {\n    // converts [ x1, y1, z1,  x2, y2, z2, ... ] to pairs format\n\n    const length = array.length - 3\n    const points = new Float32Array(2 * length)\n\n    for (let i = 0; i < length; i += 3) {\n      points[2 * i] = array[i]\n      points[2 * i + 1] = array[i + 1]\n      points[2 * i + 2] = array[i + 2]\n\n      points[2 * i + 3] = array[i + 3]\n      points[2 * i + 4] = array[i + 4]\n      points[2 * i + 5] = array[i + 5]\n    }\n\n    super.setPositions(points)\n\n    return this\n  }\n\n  setColors(array) {\n    // converts [ r1, g1, b1,  r2, g2, b2, ... ] to pairs format\n\n    const length = array.length - 3\n    const colors = new Float32Array(2 * length)\n\n    for (let i = 0; i < length; i += 3) {\n      colors[2 * i] = array[i]\n      colors[2 * i + 1] = array[i + 1]\n      colors[2 * i + 2] = array[i + 2]\n\n      colors[2 * i + 3] = array[i + 3]\n      colors[2 * i + 4] = array[i + 4]\n      colors[2 * i + 5] = array[i + 5]\n    }\n\n    super.setColors(colors)\n\n    return this\n  }\n\n  fromLine(line) {\n    const geometry = line.geometry\n\n    this.setPositions(geometry.attributes.position.array) // assumes non-indexed\n\n    // set colors, maybe\n\n    return this\n  }\n}\n\nexport { LineGeometry }\n"],"mappings":";AAEA,MAAMA,YAAA,SAAqBC,oBAAA,CAAqB;EAC9CC,YAAA,EAAc;IACZ,MAAO;IAEP,KAAKC,cAAA,GAAiB;IAEtB,KAAKC,IAAA,GAAO;EACb;EAEDC,aAAaC,KAAA,EAAO;IAGlB,MAAMC,MAAA,GAASD,KAAA,CAAMC,MAAA,GAAS;IAC9B,MAAMC,MAAA,GAAS,IAAIC,YAAA,CAAa,IAAIF,MAAM;IAE1C,SAASG,CAAA,GAAI,GAAGA,CAAA,GAAIH,MAAA,EAAQG,CAAA,IAAK,GAAG;MAClCF,MAAA,CAAO,IAAIE,CAAC,IAAIJ,KAAA,CAAMI,CAAC;MACvBF,MAAA,CAAO,IAAIE,CAAA,GAAI,CAAC,IAAIJ,KAAA,CAAMI,CAAA,GAAI,CAAC;MAC/BF,MAAA,CAAO,IAAIE,CAAA,GAAI,CAAC,IAAIJ,KAAA,CAAMI,CAAA,GAAI,CAAC;MAE/BF,MAAA,CAAO,IAAIE,CAAA,GAAI,CAAC,IAAIJ,KAAA,CAAMI,CAAA,GAAI,CAAC;MAC/BF,MAAA,CAAO,IAAIE,CAAA,GAAI,CAAC,IAAIJ,KAAA,CAAMI,CAAA,GAAI,CAAC;MAC/BF,MAAA,CAAO,IAAIE,CAAA,GAAI,CAAC,IAAIJ,KAAA,CAAMI,CAAA,GAAI,CAAC;IAChC;IAED,MAAML,YAAA,CAAaG,MAAM;IAEzB,OAAO;EACR;EAEDG,UAAUL,KAAA,EAAO;IAGf,MAAMC,MAAA,GAASD,KAAA,CAAMC,MAAA,GAAS;IAC9B,MAAMK,MAAA,GAAS,IAAIH,YAAA,CAAa,IAAIF,MAAM;IAE1C,SAASG,CAAA,GAAI,GAAGA,CAAA,GAAIH,MAAA,EAAQG,CAAA,IAAK,GAAG;MAClCE,MAAA,CAAO,IAAIF,CAAC,IAAIJ,KAAA,CAAMI,CAAC;MACvBE,MAAA,CAAO,IAAIF,CAAA,GAAI,CAAC,IAAIJ,KAAA,CAAMI,CAAA,GAAI,CAAC;MAC/BE,MAAA,CAAO,IAAIF,CAAA,GAAI,CAAC,IAAIJ,KAAA,CAAMI,CAAA,GAAI,CAAC;MAE/BE,MAAA,CAAO,IAAIF,CAAA,GAAI,CAAC,IAAIJ,KAAA,CAAMI,CAAA,GAAI,CAAC;MAC/BE,MAAA,CAAO,IAAIF,CAAA,GAAI,CAAC,IAAIJ,KAAA,CAAMI,CAAA,GAAI,CAAC;MAC/BE,MAAA,CAAO,IAAIF,CAAA,GAAI,CAAC,IAAIJ,KAAA,CAAMI,CAAA,GAAI,CAAC;IAChC;IAED,MAAMC,SAAA,CAAUC,MAAM;IAEtB,OAAO;EACR;EAEDC,SAASC,IAAA,EAAM;IACb,MAAMC,QAAA,GAAWD,IAAA,CAAKC,QAAA;IAEtB,KAAKV,YAAA,CAAaU,QAAA,CAASC,UAAA,CAAWC,QAAA,CAASX,KAAK;IAIpD,OAAO;EACR;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}